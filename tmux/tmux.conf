set-option -g default-shell /usr/local/bin/fish
set -g default-command "reattach-to-user-namespace -l /usr/local/bin/fish"
new-session -n $HOST

# Assume a True Color terminal
set -g default-terminal "screen-256color"
set -g terminal-overrides ",xterm-256color:Tc"

# Use C-a instead of C-b as prefix
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Use the mouse to select and resize panes and windows
set-option -g mouse on

# Use vim-like shortcuts in copy mode
setw -g mode-keys vi
unbind-key -t vi-copy v
bind-key -t vi-copy v begin-selection # Begin selection in copy mode.
bind-key -t vi-copy 'C-v' rectangle-toggle # Begin selection in copy mode.
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Remove delay after esc keypress
set -sg escape-time 0

# Theme
source ~/.dotfiles/tmux/tmux.theme


# Custom key bindings

# Quickly switch between 2 panes or windows
bind-key C-a if-shell 'test #{window_panes} -gt 1' 'last-pane' 'last-window'

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

